// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dot_product_interface_Loop_L1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m,
        h,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        n,
        A_address0,
        A_ce0,
        A_q0,
        B_address0,
        B_ce0,
        B_q0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] m;
input  [31:0] h;
output  [19:0] C_address0;
output   C_ce0;
output   C_we0;
output  [7:0] C_d0;
input  [31:0] n;
output  [19:0] A_address0;
output   A_ce0;
input  [7:0] A_q0;
output  [19:0] B_address0;
output   B_ce0;
input  [7:0] B_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_ce0;
reg C_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [63:0] h_cast_fu_130_p1;
reg  signed [63:0] h_cast_reg_355;
wire   [127:0] bound_fu_146_p2;
reg   [127:0] bound_reg_360;
wire   [9:0] select_ln14_fu_206_p3;
reg   [9:0] select_ln14_reg_368;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln14_fu_175_p2;
wire   [19:0] shl_ln22_mid2_fu_235_p3;
reg   [19:0] shl_ln22_mid2_reg_373;
wire   [19:0] trunc_ln16_fu_244_p1;
reg   [19:0] trunc_ln16_reg_378;
wire   [9:0] trunc_ln22_fu_249_p1;
reg   [9:0] trunc_ln22_reg_383;
reg   [9:0] lshr_ln_reg_388;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_done;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_idle;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_ready;
wire   [19:0] grp_Loop_L1_proc_Pipeline_SUM_fu_117_A_address0;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_A_ce0;
wire   [19:0] grp_Loop_L1_proc_Pipeline_SUM_fu_117_B_address0;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_B_ce0;
wire   [7:0] grp_Loop_L1_proc_Pipeline_SUM_fu_117_acc_V_out;
wire    grp_Loop_L1_proc_Pipeline_SUM_fu_117_acc_V_out_ap_vld;
reg    grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln22_fu_311_p1;
wire    ap_CS_fsm_state4;
reg   [63:0] j_fu_66;
wire   [63:0] j_1_fu_269_p2;
reg    ap_block_state1;
reg   [9:0] indvars_iv_fu_70;
wire   [9:0] add_ln16_fu_275_p2;
reg   [63:0] i_fu_74;
wire   [63:0] select_ln14_2_fu_223_p3;
reg   [127:0] indvar_flatten_fu_78;
wire   [127:0] add_ln14_fu_180_p2;
wire  signed [63:0] cast_cast_fu_134_p1;
wire   [63:0] bound_fu_146_p0;
wire   [63:0] bound_fu_146_p1;
wire   [0:0] icmp_ln16_fu_201_p2;
wire   [63:0] i_2_fu_195_p2;
wire   [9:0] trunc_ln14_fu_231_p1;
wire   [63:0] select_ln14_1_fu_215_p3;
wire   [19:0] add_ln22_fu_253_p2;
wire   [19:0] tmp_1_fu_305_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire   [127:0] bound_fu_146_p00;
wire   [127:0] bound_fu_146_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start_reg = 1'b0;
end

dot_product_interface_Loop_L1_proc_Pipeline_SUM grp_Loop_L1_proc_Pipeline_SUM_fu_117(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start),
    .ap_done(grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_done),
    .ap_idle(grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_idle),
    .ap_ready(grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_ready),
    .n_cast(n),
    .shl_ln22_mid2(shl_ln22_mid2_reg_373),
    .A_address0(grp_Loop_L1_proc_Pipeline_SUM_fu_117_A_address0),
    .A_ce0(grp_Loop_L1_proc_Pipeline_SUM_fu_117_A_ce0),
    .A_q0(A_q0),
    .trunc_ln(trunc_ln16_reg_378),
    .select_ln14(select_ln14_reg_368),
    .B_address0(grp_Loop_L1_proc_Pipeline_SUM_fu_117_B_address0),
    .B_ce0(grp_Loop_L1_proc_Pipeline_SUM_fu_117_B_ce0),
    .B_q0(B_q0),
    .acc_V_out(grp_Loop_L1_proc_Pipeline_SUM_fu_117_acc_V_out),
    .acc_V_out_ap_vld(grp_Loop_L1_proc_Pipeline_SUM_fu_117_acc_V_out_ap_vld)
);

dot_product_interface_mul_64ns_64ns_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_64ns_64ns_128_1_1_U10(
    .din0(bound_fu_146_p0),
    .din1(bound_fu_146_p1),
    .dout(bound_fu_146_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln14_fu_175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln14_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_ready == 1'b1)) begin
            grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_74 <= 64'd0;
    end else if (((icmp_ln14_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_74 <= select_ln14_2_fu_223_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_78 <= 128'd0;
    end else if (((icmp_ln14_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_fu_78 <= add_ln14_fu_180_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv_fu_70 <= 10'd0;
    end else if (((icmp_ln14_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvars_iv_fu_70 <= add_ln16_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_66 <= 64'd0;
    end else if (((icmp_ln14_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_fu_66 <= j_1_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bound_reg_360 <= bound_fu_146_p2;
        h_cast_reg_355 <= h_cast_fu_130_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_175_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        lshr_ln_reg_388 <= {{add_ln22_fu_253_p2[19:10]}};
        select_ln14_reg_368 <= select_ln14_fu_206_p3;
        shl_ln22_mid2_reg_373[19 : 10] <= shl_ln22_mid2_fu_235_p3[19 : 10];
        trunc_ln16_reg_378 <= trunc_ln16_fu_244_p1;
        trunc_ln22_reg_383 <= trunc_ln22_fu_249_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln14_fu_175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_fu_175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln14_fu_175_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = grp_Loop_L1_proc_Pipeline_SUM_fu_117_A_address0;

assign A_ce0 = grp_Loop_L1_proc_Pipeline_SUM_fu_117_A_ce0;

assign B_address0 = grp_Loop_L1_proc_Pipeline_SUM_fu_117_B_address0;

assign B_ce0 = grp_Loop_L1_proc_Pipeline_SUM_fu_117_B_ce0;

assign C_address0 = zext_ln22_fu_311_p1;

assign C_d0 = grp_Loop_L1_proc_Pipeline_SUM_fu_117_acc_V_out;

assign add_ln14_fu_180_p2 = (indvar_flatten_fu_78 + 128'd1);

assign add_ln16_fu_275_p2 = (select_ln14_fu_206_p3 + 10'd1);

assign add_ln22_fu_253_p2 = (trunc_ln16_fu_244_p1 + shl_ln22_mid2_fu_235_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign bound_fu_146_p0 = bound_fu_146_p00;

assign bound_fu_146_p00 = $unsigned(cast_cast_fu_134_p1);

assign bound_fu_146_p1 = bound_fu_146_p10;

assign bound_fu_146_p10 = $unsigned(h_cast_fu_130_p1);

assign cast_cast_fu_134_p1 = $signed(m);

assign grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start = grp_Loop_L1_proc_Pipeline_SUM_fu_117_ap_start_reg;

assign h_cast_fu_130_p1 = $signed(h);

assign i_2_fu_195_p2 = (i_fu_74 + 64'd1);

assign icmp_ln14_fu_175_p2 = ((indvar_flatten_fu_78 == bound_reg_360) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_201_p2 = ((j_fu_66 == h_cast_reg_355) ? 1'b1 : 1'b0);

assign j_1_fu_269_p2 = (select_ln14_1_fu_215_p3 + 64'd1);

assign select_ln14_1_fu_215_p3 = ((icmp_ln16_fu_201_p2[0:0] == 1'b1) ? 64'd0 : j_fu_66);

assign select_ln14_2_fu_223_p3 = ((icmp_ln16_fu_201_p2[0:0] == 1'b1) ? i_2_fu_195_p2 : i_fu_74);

assign select_ln14_fu_206_p3 = ((icmp_ln16_fu_201_p2[0:0] == 1'b1) ? 10'd0 : indvars_iv_fu_70);

assign shl_ln22_mid2_fu_235_p3 = {{trunc_ln14_fu_231_p1}, {10'd0}};

assign tmp_1_fu_305_p3 = {{lshr_ln_reg_388}, {trunc_ln22_reg_383}};

assign trunc_ln14_fu_231_p1 = select_ln14_2_fu_223_p3[9:0];

assign trunc_ln16_fu_244_p1 = select_ln14_1_fu_215_p3[19:0];

assign trunc_ln22_fu_249_p1 = select_ln14_1_fu_215_p3[9:0];

assign zext_ln22_fu_311_p1 = tmp_1_fu_305_p3;

always @ (posedge ap_clk) begin
    shl_ln22_mid2_reg_373[9:0] <= 10'b0000000000;
end

endmodule //dot_product_interface_Loop_L1_proc
