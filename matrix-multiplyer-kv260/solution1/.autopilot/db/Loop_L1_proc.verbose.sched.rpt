

================================================================
== Vitis HLS Report for 'Loop_L1_proc'
================================================================
* Date:           Thu May  4 14:33:29 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        matrix-multiplyer-kv260
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.530 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+------------+-----------+------------+-----+------------+---------+
    |   Latency (cycles)   |   Latency (absolute)   |     Interval     | Pipeline|
    |   min   |     max    |    min    |     max    | min |     max    |   Type  |
    +---------+------------+-----------+------------+-----+------------+---------+
    |        1|  1082130433|  10.000 ns|  10.821 sec|    1|  1082130433|       no|
    +---------+------------+-----------+------------+-----+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+------------+----------+-----------+-----------+-------------+----------+
        |          |   Latency (cycles)   | Iteration|  Initiation Interval  |     Trip    |          |
        | Loop Name|   min   |     max    |  Latency |  achieved |   target  |    Count    | Pipelined|
        +----------+---------+------------+----------+-----------+-----------+-------------+----------+
        |- L1_L2   |        0|  1082130432|  5 ~ 1032|          -|          -|  0 ~ 1048576|        no|
        +----------+---------+------------+----------+-----------+-----------+-------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.53>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 5 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%indvars_iv = alloca i32 1"   --->   Operation 6 'alloca' 'indvars_iv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 7 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%n_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %n"   --->   Operation 9 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%h_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %h"   --->   Operation 10 'read' 'h_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%m_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %m"   --->   Operation 11 'read' 'm_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%acc_V_loc = alloca i64 1"   --->   Operation 12 'alloca' 'acc_V_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %C, i64 666, i64 207, i64 1"   --->   Operation 13 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %B, i64 666, i64 207, i64 1"   --->   Operation 14 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %A, i64 666, i64 207, i64 1"   --->   Operation 15 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %C, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %B, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %A, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%h_cast = sext i32 %h_read"   --->   Operation 19 'sext' 'h_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%cast_cast = sext i32 %m_read"   --->   Operation 20 'sext' 'cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%cast_cast_cast = zext i64 %cast_cast"   --->   Operation 21 'zext' 'cast_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%cast1_cast_cast = zext i64 %h_cast"   --->   Operation 22 'zext' 'cast1_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (4.53ns)   --->   "%bound = mul i128 %cast_cast_cast, i128 %cast1_cast_cast"   --->   Operation 23 'mul' 'bound' <Predicate = true> <Delay = 4.53> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.53> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i128 0, i128 %indvar_flatten"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %i"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvars_iv"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %j"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body5.i"   --->   Operation 28 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.06>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i128 %indvar_flatten" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 29 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.30ns)   --->   "%icmp_ln14 = icmp_eq  i128 %indvar_flatten_load, i128 %bound" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 30 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.57ns)   --->   "%add_ln14 = add i128 %indvar_flatten_load, i128 1" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 31 'add' 'add_ln14' <Predicate = true> <Delay = 1.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln14 = br i1 %icmp_ln14, void %for.cond.cleanup4.i.loopexit, void %_Z11dot_productILm1024ELm1024ELm1024EEvPAT0__8ap_fixedILi8ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EEPAT1__S3_S7_iii.exit.exitStub" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 32 'br' 'br_ln14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%j_load = load i64 %j" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 33 'load' 'j_load' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%indvars_iv_load = load i10 %indvars_iv" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 34 'load' 'indvars_iv_load' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_load = load i64 %i" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 35 'load' 'i_load' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.08ns)   --->   "%i_2 = add i64 %i_load, i64 1" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 36 'add' 'i_2' <Predicate = (!icmp_ln14)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.13ns)   --->   "%icmp_ln16 = icmp_eq  i64 %j_load, i64 %h_cast" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 37 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln14)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.40ns)   --->   "%select_ln14 = select i1 %icmp_ln16, i10 0, i10 %indvars_iv_load" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 38 'select' 'select_ln14' <Predicate = (!icmp_ln14)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.42ns)   --->   "%select_ln14_1 = select i1 %icmp_ln16, i64 0, i64 %j_load" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 39 'select' 'select_ln14_1' <Predicate = (!icmp_ln14)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.42ns)   --->   "%select_ln14_2 = select i1 %icmp_ln16, i64 %i_2, i64 %i_load" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 40 'select' 'select_ln14_2' <Predicate = (!icmp_ln14)> <Delay = 0.42> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln14 = trunc i64 %select_ln14_2" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 41 'trunc' 'trunc_ln14' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%shl_ln22_mid2 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %trunc_ln14, i10 0" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 42 'bitconcatenate' 'shl_ln22_mid2' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln16 = trunc i64 %select_ln14_1" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 43 'trunc' 'trunc_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (0.00ns)   --->   "%call_ln14 = call void @Loop_L1_proc_Pipeline_SUM, i32 %n_read, i20 %shl_ln22_mid2, i8 %A, i20 %trunc_ln16, i10 %select_ln14, i8 %B, i8 %acc_V_loc" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 44 'call' 'call_ln14' <Predicate = (!icmp_ln14)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln22 = trunc i64 %select_ln14_1" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 45 'trunc' 'trunc_ln22' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.89ns)   --->   "%add_ln22 = add i20 %trunc_ln16, i20 %shl_ln22_mid2" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 46 'add' 'add_ln22' <Predicate = (!icmp_ln14)> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i10 @_ssdm_op_PartSelect.i10.i20.i32.i32, i20 %add_ln22, i32 10, i32 19" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 47 'partselect' 'lshr_ln' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.08ns)   --->   "%j_1 = add i64 %select_ln14_1, i64 1" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 48 'add' 'j_1' <Predicate = (!icmp_ln14)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.78ns)   --->   "%add_ln16 = add i10 %select_ln14, i10 1" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 49 'add' 'add_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln16 = store i128 %add_ln14, i128 %indvar_flatten" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 50 'store' 'store_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.42>
ST_2 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln16 = store i64 %select_ln14_2, i64 %i" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 51 'store' 'store_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.42>
ST_2 : Operation 52 [1/1] (0.42ns)   --->   "%store_ln16 = store i10 %add_ln16, i10 %indvars_iv" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 52 'store' 'store_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.42>
ST_2 : Operation 53 [1/1] (0.42ns)   --->   "%store_ln16 = store i64 %j_1, i64 %j" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 53 'store' 'store_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.42>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 54 'ret' 'ret_ln0' <Predicate = (icmp_ln14)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 55 [1/2] (0.00ns)   --->   "%call_ln14 = call void @Loop_L1_proc_Pipeline_SUM, i32 %n_read, i20 %shl_ln22_mid2, i8 %A, i20 %trunc_ln16, i10 %select_ln14, i8 %B, i8 %acc_V_loc" [matrix-multiplyer-kv260/dot_product.cpp:14]   --->   Operation 55 'call' 'call_ln14' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.23>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @L1_L2_str"   --->   Operation 56 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 1048576, i64 262144"   --->   Operation 57 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%specloopname_ln13 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [matrix-multiplyer-kv260/dot_product.cpp:13]   --->   Operation 58 'specloopname' 'specloopname_ln13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%acc_V_loc_load = load i8 %acc_V_loc"   --->   Operation 59 'load' 'acc_V_loc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %lshr_ln, i10 %trunc_ln22" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 60 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i20 %tmp_1" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 61 'zext' 'zext_ln22' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%C_addr = getelementptr i8 %C, i64 0, i64 %zext_ln22" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 62 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (1.23ns)   --->   "%store_ln22 = store i8 %acc_V_loc_load, i20 %C_addr" [matrix-multiplyer-kv260/dot_product.cpp:22]   --->   Operation 63 'store' 'store_ln22' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 1048576> <RAM>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln16 = br void %for.body5.i" [matrix-multiplyer-kv260/dot_product.cpp:16]   --->   Operation 64 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.53ns
The critical path consists of the following:
	wire read operation ('h_read') on port 'h' [12]  (0 ns)
	'mul' operation ('bound') [25]  (4.53 ns)

 <State 2>: 3.07ns
The critical path consists of the following:
	'load' operation ('j_load', matrix-multiplyer-kv260/dot_product.cpp:16) on local variable 'j' [37]  (0 ns)
	'icmp' operation ('icmp_ln16', matrix-multiplyer-kv260/dot_product.cpp:16) [43]  (1.13 ns)
	'select' operation ('select_ln14_1', matrix-multiplyer-kv260/dot_product.cpp:14) [45]  (0.424 ns)
	'add' operation ('j', matrix-multiplyer-kv260/dot_product.cpp:16) [60]  (1.08 ns)
	'store' operation ('store_ln16', matrix-multiplyer-kv260/dot_product.cpp:16) of variable 'j', matrix-multiplyer-kv260/dot_product.cpp:16 on local variable 'j' [65]  (0.427 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 1.24ns
The critical path consists of the following:
	'load' operation ('acc_V_loc_load') on local variable 'acc_V_loc' [52]  (0 ns)
	'store' operation ('store_ln22', matrix-multiplyer-kv260/dot_product.cpp:22) of variable 'acc_V_loc_load' on array 'C' [59]  (1.24 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
