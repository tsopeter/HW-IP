

================================================================
== Vitis HLS Report for 'Loop_L1_proc_Pipeline_SUM'
================================================================
* Date:           Thu May  4 14:33:28 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        matrix-multiplyer-kv260
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.233 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min    |    max    | min |  max |   Type  |
    +---------+---------+-----------+-----------+-----+------+---------+
    |        2|     1029|  20.000 ns|  10.290 us|    2|  1029|       no|
    +---------+---------+-----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+----------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip   |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |   Count  | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+----------+----------+
        |- SUM     |        0|     1027|         5|          1|          1|  0 ~ 1024|       yes|
        +----------+---------+---------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%acc_V = alloca i32 1"   --->   Operation 8 'alloca' 'acc_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 9 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%select_ln14_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %select_ln14"   --->   Operation 10 'read' 'select_ln14_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%trunc_ln_read = read i20 @_ssdm_op_Read.ap_auto.i20, i20 %trunc_ln"   --->   Operation 11 'read' 'trunc_ln_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%shl_ln22_mid2_read = read i20 @_ssdm_op_Read.ap_auto.i20, i20 %shl_ln22_mid2"   --->   Operation 12 'read' 'shl_ln22_mid2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%n_cast_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %n_cast"   --->   Operation 13 'read' 'n_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%n_cast_cast = sext i32 %n_cast_read"   --->   Operation 14 'sext' 'n_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %A, i64 666, i64 207, i64 1"   --->   Operation 15 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %B, i64 666, i64 207, i64 1"   --->   Operation 16 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %A, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %B, void @empty_3, i32 0, i32 0, void @empty_0, i32 1, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 0, i64 %k"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 20 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %acc_V"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body10.i"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.13>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%k_1 = load i64 %k"   --->   Operation 22 'load' 'k_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 23 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.13ns)   --->   "%icmp_ln18 = icmp_eq  i64 %k_1, i64 %n_cast_cast" [matrix-multiplyer-kv260/dot_product.cpp:18]   --->   Operation 24 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.08ns)   --->   "%k_2 = add i64 %k_1, i64 1" [matrix-multiplyer-kv260/dot_product.cpp:18]   --->   Operation 25 'add' 'k_2' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln18 = br i1 %icmp_ln18, void %for.body10.i.split, void %for.cond.cleanup9.i.loopexit.exitStub" [matrix-multiplyer-kv260/dot_product.cpp:18]   --->   Operation 26 'br' 'br_ln18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty = trunc i64 %k_1"   --->   Operation 27 'trunc' 'empty' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln1271 = trunc i64 %k_1"   --->   Operation 28 'trunc' 'trunc_ln1271' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.89ns)   --->   "%add_ln1271 = add i20 %empty, i20 %shl_ln22_mid2_read"   --->   Operation 29 'add' 'add_ln1271' <Predicate = (!icmp_ln18)> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%lshr_ln1 = partselect i10 @_ssdm_op_PartSelect.i10.i20.i32.i32, i20 %add_ln1271, i32 10, i32 19"   --->   Operation 30 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %lshr_ln1, i10 %trunc_ln1271"   --->   Operation 31 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln1271 = zext i20 %tmp_2"   --->   Operation 32 'zext' 'zext_ln1271' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i8 %A, i64 0, i64 %zext_ln1271"   --->   Operation 33 'getelementptr' 'A_addr' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 34 [2/2] (1.23ns)   --->   "%A_load = load i20 %A_addr"   --->   Operation 34 'load' 'A_load' <Predicate = (!icmp_ln18)> <Delay = 1.23> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 1048576> <RAM>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %trunc_ln1271, i10 0"   --->   Operation 35 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.89ns)   --->   "%add_ln1273 = add i20 %shl_ln, i20 %trunc_ln_read"   --->   Operation 36 'add' 'add_ln1273' <Predicate = (!icmp_ln18)> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%lshr_ln2 = partselect i10 @_ssdm_op_PartSelect.i10.i20.i32.i32, i20 %add_ln1273, i32 10, i32 19"   --->   Operation 37 'partselect' 'lshr_ln2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_4 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %lshr_ln2, i10 %select_ln14_read"   --->   Operation 38 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln1273 = zext i20 %tmp_4"   --->   Operation 39 'zext' 'zext_ln1273' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i8 %B, i64 0, i64 %zext_ln1273"   --->   Operation 40 'getelementptr' 'B_addr' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 41 [2/2] (1.23ns)   --->   "%B_load = load i20 %B_addr"   --->   Operation 41 'load' 'B_load' <Predicate = (!icmp_ln18)> <Delay = 1.23> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 1048576> <RAM>
ST_2 : Operation 42 [1/1] (0.42ns)   --->   "%store_ln18 = store i64 %k_2, i64 %k" [matrix-multiplyer-kv260/dot_product.cpp:18]   --->   Operation 42 'store' 'store_ln18' <Predicate = (!icmp_ln18)> <Delay = 0.42>

State 3 <SV = 2> <Delay = 2.23>
ST_3 : Operation 43 [1/2] (1.23ns)   --->   "%A_load = load i20 %A_addr"   --->   Operation 43 'load' 'A_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 1048576> <RAM>
ST_3 : Operation 44 [1/2] (1.23ns)   --->   "%B_load = load i20 %B_addr"   --->   Operation 44 'load' 'B_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM_1P">   --->   Core 88 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 1048576> <RAM>
ST_3 : Operation 45 [3/3] (0.99ns) (grouped into DSP with root node acc_V_1)   --->   "%mul_ln813 = mul i8 %B_load, i8 %A_load"   --->   Operation 45 'mul' 'mul_ln813' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.99>
ST_4 : Operation 46 [2/3] (0.99ns) (grouped into DSP with root node acc_V_1)   --->   "%mul_ln813 = mul i8 %B_load, i8 %A_load"   --->   Operation 46 'mul' 'mul_ln813' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 0.64>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%acc_V_load = load i8 %acc_V"   --->   Operation 47 'load' 'acc_V_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/3] (0.00ns) (grouped into DSP with root node acc_V_1)   --->   "%mul_ln813 = mul i8 %B_load, i8 %A_load"   --->   Operation 48 'mul' 'mul_ln813' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 49 [2/2] (0.64ns) (root node of the DSP)   --->   "%acc_V_1 = add i8 %mul_ln813, i8 %acc_V_load"   --->   Operation 49 'add' 'acc_V_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%acc_V_load_1 = load i8 %acc_V"   --->   Operation 55 'load' 'acc_V_load_1' <Predicate = (icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %acc_V_out, i8 %acc_V_load_1"   --->   Operation 56 'write' 'write_ln0' <Predicate = (icmp_ln18)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 57 'ret' 'ret_ln0' <Predicate = (icmp_ln18)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 1.07>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%speclooptripcount_ln19 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 1024, i64 512" [matrix-multiplyer-kv260/dot_product.cpp:19]   --->   Operation 50 'speclooptripcount' 'speclooptripcount_ln19' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%specloopname_ln13 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [matrix-multiplyer-kv260/dot_product.cpp:13]   --->   Operation 51 'specloopname' 'specloopname_ln13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 52 [1/2] (0.64ns) (root node of the DSP)   --->   "%acc_V_1 = add i8 %mul_ln813, i8 %acc_V_load"   --->   Operation 52 'add' 'acc_V_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 53 [1/1] (0.42ns)   --->   "%store_ln18 = store i8 %acc_V_1, i8 %acc_V" [matrix-multiplyer-kv260/dot_product.cpp:18]   --->   Operation 53 'store' 'store_ln18' <Predicate = true> <Delay = 0.42>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln18 = br void %for.body10.i" [matrix-multiplyer-kv260/dot_product.cpp:18]   --->   Operation 54 'br' 'br_ln18' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('k') [9]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'k' [19]  (0.427 ns)

 <State 2>: 2.13ns
The critical path consists of the following:
	'load' operation ('k') on local variable 'k' [23]  (0 ns)
	'add' operation ('add_ln1271') [34]  (0.894 ns)
	'getelementptr' operation ('A_addr') [38]  (0 ns)
	'load' operation ('A_load') on array 'A' [39]  (1.24 ns)

 <State 3>: 2.23ns
The critical path consists of the following:
	'load' operation ('A_load') on array 'A' [39]  (1.24 ns)
	'mul' operation of DSP[48] ('mul_ln813') [47]  (0.996 ns)

 <State 4>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[48] ('mul_ln813') [47]  (0.996 ns)

 <State 5>: 0.645ns
The critical path consists of the following:
	'load' operation ('acc_V_load') on local variable 'acc.V' [29]  (0 ns)
	'add' operation of DSP[48] ('acc.V') [48]  (0.645 ns)

 <State 6>: 1.07ns
The critical path consists of the following:
	'add' operation of DSP[48] ('acc.V') [48]  (0.645 ns)
	'store' operation ('store_ln18', matrix-multiplyer-kv260/dot_product.cpp:18) of variable 'acc.V' on local variable 'acc.V' [50]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
